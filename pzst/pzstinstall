#!/bin/bash

# Ask for sudo password before printing anything to the console
sudo echo -n

. "$(dirname "${0}")/pzstenv"

COMPLETION="${REPO}/completion"
REPOCONFIG="${REPO}/${CONFIGFILE}.example"
REPOCRON="${REPO}/cron/${NAME}"
REPOENV="${REPO}/env"
SCRIPTS="${REPO}/pzserver"
PZST="${REPO}/pzst"
SRC="${REPO}/src"

PACKAGES='gcc iproute2 jq libc6-dev libsdl2-2.0-0:i386 lz4 make procps python3 python3-venv sqlite3 unzip wget'

ARCH=$(dpkg --print-foreign-architectures | grep i386)
if [ -z "${ARCH}" ]; then
	echo [*] Adding architecture i386
	sudo dpkg --add-architecture i386
fi

echo [*] Updating package cache
sudo apt-get -qq update

echo [*] Upgrading packages
sudo apt-get -qq --yes upgrade 3>&1 2>&3- 1>/dev/null

for PACKAGE in ${PACKAGES}; do
	dpkg -s "${PACKAGE}" &> /dev/null
	if [ "${?}" != '0' ]; then
		echo [*] Installing new package \`${PACKAGE}\`
		sudo apt-get install -qq --yes ${PACKAGE} 3>&1 2>&3- 1>/dev/null | grep -v 'Extracting templates from packages' || true
	fi
done

getent passwd pzst &> /dev/null
if [ "${?}" != '0' ]; then
	echo [*] Adding system user: pzst
	sudo useradd -r pzst
fi

echo [*] Creating virtual environment

python3 -m venv "${REPOENV}" > /dev/null

chmod -R go-w "${REPOENV}"

. "${REPOENV}/bin/activate"

python3 -m pip install -r "${REPO}/requirements.txt" > /dev/null

python3 -m build "${REPO}/pypzst" > /dev/null

python3 -m pip install "${REPO}/pypzst/dist/pypzst-0.0.1-py3-none-any.whl" > /dev/null

deactivate

sudo rm -rf "${CONFIGENV}"

echo [*] Installing Project Zomboid Server Tools

sudo mkdir -p        "${LOGDIR}"
sudo chown root:pzst "${LOGDIR}"
sudo chmod 2775      "${LOGDIR}"

sudo mkdir -p        "${CACHEDIR}"
sudo chown root:pzst "${CACHEDIR}"
sudo chmod 775       "${CACHEDIR}"

sudo mkdir -p        "${CONFIGDIR}"
sudo chown root:pzst "${CONFIGDIR}"
sudo chmod 755       "${CONFIGDIR}"

if ! [ -f "${CONFIG}" ]; then
	sudo cp "${REPOCONFIG}" "${CONFIG}"
fi
sudo chown root:pzst "${CONFIG}"
sudo chmod 664       "${CONFIG}"

sudo mv "${REPOENV}" "${CONFIGDIR}"
sudo chown -R root:root "${CONFIGENV}"

for SCRIPT in $(ls -1 "${PZST}/"); do
	sudo cp -f "${PZST}/${SCRIPT}" "${BIN}"
done

for SCRIPT in $(ls -1 "${SCRIPTS}/"); do
	sudo cp -f "${SCRIPTS}/${SCRIPT}" "${BIN}"
done

sudo mkdir -p "${LIB}"
sudo chmod 755 "${LIB}"

sudo cp -r "${REPO}/cron" "${LIB}/"
sudo chmod 755 "${LIB}/cron"
sudo chmod 644 "${LIB}/cron/"*

sudo cp "${COMPLETION}/"* /etc/bash_completion.d/

sudo -u pzst USER=${USER} pzst_config --install "$(realpath "${REPO}")"

make -C "${SRC}" clean > /dev/null
make -C "${SRC}" > /dev/null
sudo make -C "${SRC}" install > /dev/null

sudo cp "${REPO}/init.d/pzstd.service" /etc/systemd/system/
sudo systemctl enable pzstd.service 2> /dev/null
sudo service pzstd restart

sudo cp "${REPOCRON}" "${CRONFILE}"
sudo chmod 644 "${CRONFILE}"
sudo /etc/init.d/cron restart > /dev/null
